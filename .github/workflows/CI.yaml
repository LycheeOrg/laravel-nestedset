name: Tests

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  tests:
    runs-on: ${{ matrix.operating-system }}
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository)

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ['8.0', '8.1']
        beta: ['beta', '']
        dependencies: ['locked', 'lowest', 'highest']
        exclude:
          - beta: 'beta'
            dependencies: 'locked'
          - beta: 'beta'
            dependencies: 'lowest'

    name: PHP ${{ matrix.php-versions }} -- ${{ matrix.beta }} ${{ matrix.dependencies }}

    env:
      COMPOSER_NO_INTERACTION: 1
      extensions: curl json libxml dom
      key: cache-v1 # can be any string, change to clear the extension cache.

    steps:

      # Checks out a copy of your repository on the ubuntu machine
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          coverage: xdebug
          tools: pecl, composer

      - name: Fix beta
        if: ${{ matrix.beta == 'beta' }}
        run: perl -pi -e 's/^}$/,"minimum-stability":"beta"}/' composer.json

      - name: PHP Show modules
        run: php -m

      # Install dependencies and handle caching in one go.
      # Dependencies need to be installed to make sure the PHPUnit classes are recognized.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: Validate files
        run: composer validate-files

      - name: Validate files
        run: composer run-phpstan
      
      - name: Run tests
        run: composer run-tests