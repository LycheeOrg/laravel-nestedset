name: Tests

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.markdown'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.markdown'

jobs:
  tests:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository)

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.0', '8.1', '8.2']

    name: PHP ${{ matrix.php-versions }}
    
    env:
      COMPOSER_NO_INTERACTION: 1
      extensions: curl, json, libxml, dom
      key: cache-v1 # can be any string, change to clear the extension cache.

    steps:

      # Checks out a copy of your repository on the ubuntu machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache PHP Extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Cache Composer Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.8.0
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          coverage: xdebug
          tools: pecl, composer

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction

      - name: Validate files
        run: composer validate-files

      - name: Run PHPStan
        run: composer phpstan
      
      - name: Run tests
        run: composer run-tests
